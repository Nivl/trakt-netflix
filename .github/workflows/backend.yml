name: backend

on:
  push:
    branches: [ main, ml/docker ]

  pull_request:
    branches: [ main ]

defaults:
  run:
    working-directory: backend

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/nivl/trakt-netflix

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get Go version
        id: gover
        run: echo "::set-output name=value::^$(grep 'go 1.' go.mod | cut -d ' ' -f 2)"
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.gover.outputs.value }}

      - name: Build
        run: go build -race ./...

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Go version
        id: gover
        run: echo "value=^$(grep 'go 1.' go.mod | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.gover.outputs.value }}

      - run: |
          go mod tidy
          git diff --exit-code

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Go version
        id: gover
        run: echo "value=^$(grep 'go 1.' go.mod | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.gover.outputs.value }}

      - run: |
          go test ./...

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - build
      - lint
      - test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=ref,event=branch
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

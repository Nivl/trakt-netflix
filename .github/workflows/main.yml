name: workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

# Don't run more than one workflow for the same branch at a time
# This is to save credits on the CI provider
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/nivl/trakt-netflix

jobs:
  prepare-env:
    name: detect what files changed
    runs-on: ubuntu-latest
    container:
      image: &service-images-go-dev ghcr.io/nivl/service-images-go-dev:sha-f8dbff4
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
    outputs:
      code-changed: ${{ steps.changes.outputs.src }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        id: restore-cache
        uses: './.github/actions/setup-go'

      - name: Update cache if needed
        shell: sh
        if: steps.restore-cache.outputs.is-cache-hit != 'true'
        run: go mod download

      - name: Check for file changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: changes
        with:
          token: ${{ github.token }}
          filters: |
            src:
              - './**/*.go'
              - './Taskfile_CI.yml'
              - './go.sum'
              - './go.mod'
              - './Dockerfile'
              - '.github/workflows/main.yml'
              - '.github/actions/go-*/*.yml'


  build:
    if: needs.prepare-env.outputs.code-changed == 'true'
    needs: [prepare-env]
    runs-on: ubuntu-latest
    container:
      image: *service-images-go-dev
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        id: restore-cache
        uses: './.github/actions/setup-go'

      - name: Build
        run: |
          CGO_ENABLED=0 go build -v -o ./bin/service github.com/Nivl/trakt-netflix/cmd/service
          CGO_ENABLED=0 go build -v -o ./bin/auth github.com/Nivl/trakt-netflix/cmd/auth

  lint:
    if: needs.prepare-env.outputs.code-changed == 'true'
    needs: [prepare-env]
    runs-on: ubuntu-latest
    container:
      image: *service-images-go-dev
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        id: restore-cache
        uses: './.github/actions/setup-go'

      - run: |
          go mod tidy
          git diff --exit-code

  test:
    if: needs.prepare-env.outputs.code-changed == 'true'
    needs: [prepare-env]
    runs-on: ubuntu-latest
    container:
      image: *service-images-go-dev
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        id: restore-cache
        uses: './.github/actions/setup-go'

      - run: |
          go test ./...

  build-image:
    if: |
      always() &&
      needs.prepare-env.outputs.code-changed == 'true' &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    name: Build docker image
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      packages: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Build Image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false

  publish-images:
    if: |
      always() &&
      github.event_name == 'push' && github.ref == 'refs/heads/main' &&
      needs.prepare-env.outputs.code-changed == 'true' &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    needs:
      - build
      - lint
      - test
      - build-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # This job is what github action will check to see if a PR is ready to
  # be merged.
  required-check:
    needs:
      [
        prepare-env,
        build,
        lint,
        test,
        build-image,
      ]
    # This is necessary since a failed/skipped dependent job would cause this job to be skipped
    if: always()
    runs-on: ubuntu-latest
    steps:
      # If any jobs we depend on fail, we will fail since this is a required check
      # NOTE: A timeout is considered a failure
      - name: Check for failures
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo "One of the dependent jobs have failed. You may need to re-run it." && exit 1

